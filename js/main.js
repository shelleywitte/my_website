/* Created by Shelley Witte, 2016 */

$('#mydiv').html('Hello World!');

function initialize() {
    // initializes functions that are defined below
    cities();
    addColumns();
    addEvents();
    jQueryAjax();
    callback(); //improperly accessing my GeoJSON data outside of the callback function

};

//createsglobal variable cityPop
var cityPop;

//creates cities function which contains cityPop array with city objects
function cities() {
    //cityPop array which has cities with two properties: city and population
    cityPop = [
    {
        city: 'Minneapolis',
        population: 400070
    },
    {
        city: 'St. Paul',
        population: 294873,
    },
    {
        city: 'Washington, DC',
        population: 658893
    },
    {
        city: 'Stillwater',
        population: 18674
    }
    ];

    //appends a table to the div
    $("#mydiv").append("<table>");

    //appends a header row to the table (located in the div)
    $("table").append("<tr>");

    //adds "City" and "Population" columns to the header row (in the table)
    $("tr").append("<th>City</th><th>Population</th>");

    //loop to add a new row for each city
    for (var i = 0; i < cityPop.length; i++){
        //assign longer html strings to a variable
        var rowHtml = "<tr><td>" + cityPop[i].city + "</td><td>" + cityPop[i].population + "</td></tr>";
        //add the row's html string to the table
        $("table").append(rowHtml);
    };
};


//Debugging section #1

// defines a function that takes the cityPop global variable as a parameter 
function addColumns(){
    
    // iterates over each row in the table 
    $('tr').each(function(i){

        if (i == 0){

            // adds (appends) a third column to the table with the header labeled "City Size"
            $(this).append('<th>City Size</th>');
        } else {

            //creates variable citySize 
            var citySize;
            
            //if statement that looks at cityPop object population property and
            //designates the city as small/medium/large according to the criteria
            if (cityPop[i-1].population < 100000){
                citySize = 'Small';

            } else if (cityPop[i-1].population < 500000){
                citySize = 'Medium';

            } else {
                citySize = 'Large';
            };

            //adds the city size designation as new table data to the same row 
            //it assessed in the if statement
            $(this).append('<td>' + citySize + '</td>');
        };


    });
};


function addEvents(){

    //adds mouseover listener that will perform a function when the table is moused over
    $('table').mouseover(function(){
        
        //defines variable to set the text color using format: rgb(#,#,#)
        var color = "rgb(";

        //for loop that grabs 3 separate random numbers between 0 and 255 and puts them
        //together (concatenates them) into a string
        for (var i=0; i<3; i++){

            //generates a random number between 0 and 255 and assigns it to variable
            //named random
            var random = Math.round(Math.random() * 255);

            //takes random number generated by above process and adds it to string "rgb(
            color += random;

            //adds a comma to the "rgb(" string if less than three random numbers in string
            if (i<2) {
                color += ",";
            
            //adds a closed parenthesis to end of string to complete "rgb(#,#,#)""
            } else {
                color += ")";
        };
    }
        //uses css jquery method to change the text color to whatever random color the 
        //variable color is currently set to
        $(this).css('color', color);
        
    });
    
    // adds click listener that will give a pop-up alert if the table is clicked on
    $('table').click(function(){
        alert('Hey, you clicked me!');
    });

};

//an AJAX function
function jQueryAjax(){
    //jQuery AJAX method that takes a URL string parameter that points to the data within
    //the data folder and a settings object with one property that sets the data type and
    //a success property. The method below is commented out because there is a shorthand 
    //method that does the same task.

    // $.ajax("data/MegaCities.geojson", {
        // dataType: "json", 
        // success: callback

    //success property will send the callback function 3 parameters but only the first one,
    //the response data, is truly necessary since it is our data
    
    //shorthand method that loads GeoJSON data into the DOM
    $.getJSON("data/MegaCities.geojson", callback);
};


//creates a callback function so that the data can load while non-data related script
//can run in the meantime but tasks that use the data will execute once the data arrives
function callback(response) { 
    //
    var mydata = response;
    //
    stringifyData(mydata);
};

function stringifyData(data){
    // $("#mydiv").append('GeoJSON data: ' + JSON.stringify(data));
    function replacer(key, value){
        if(key=="name"||key=="desc"||key=="color"||key=="source"||key=="precision"){
            return undefined;
        }
        else return value;
    }
    $("#mydiv").append('GeoJSON data:' + JSON.stringify(data,replacer,"\n"));
};


//calls initialize function to excute the functions within that function
$(document).ready(initialize);
